#include <stdio.h>
#include <stdbool.h>
#define FRAMES 3
#define MAXF 10
#define MAXP 100
int pages[MAXP];
int count=0,n;
int queue[MAXF];
void enqueue(int page){
    if(count<FRAMES){
        queue[count]=page;
        count++;
    }
    else{
        for(int i=0;i<FRAMES-1;i++){
            queue[i]=queue[i+1];
        }
        queue[FRAMES -1]=page;
    }
}
bool ispageinq(int page){
    for(int i=0;i<count;i++){
        if(queue[i]==page){
            return true;
        }
    }
    return false;
}
void fifo(int pages[],int n){
    int hits=0;
    int faults=0;
    printf("PageReference\tQueue\tPage Fault");
    for(int i=0;i<n;i++){
        if(!ispageinq(pages[i])){
            enqueue(pages[i]);
            faults++;
            for(int j=0;j<count;j++){
            printf("%d\t",queue[j]);
            }
            printf("YES FAULT OCCURS\n");
        }
        else{
            hits++;
            for(int j=0;j<count;j++){
            printf("%d\t",queue[j]);
            }
            printf("NO HIT OCCURS\n");
        }
    }
    printf("Total Page Faults=%d\n",faults);
    printf("Total Page hits=%d\n",hits);
}
int main(){
    int pages[MAXP],n;
    printf("Enter number of pages:");
    scanf("%d",&n);
    printf("Enter the pages:");
    for(int i=0;i<n;i++){
        scanf("%d",&pages[i]);
        
    }
    fifo(pages,n);
    return 0;
}
