//reciever
#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#define SHM_SIZE 1024 // Same shared memory size as sender

int main()
{
    key_t key = ftok("shmfile", 65);         // Generate the same unique key
    int shmid = shmget(key, SHM_SIZE, 0666); // Get the shared memory ID
    if (shmid == -1)
    {
        perror("shmget failed");
        exit(1);
    }

    char *shm_ptr = (char *)shmat(shmid, NULL, 0); // Attach to shared memory
    if (shm_ptr == (char *)-1)
    {
        perror("shmat failed");
        exit(1);
    }

    printf("Data read from shared memory: %s\n", shm_ptr); // Print stored data

    shmdt(shm_ptr);                // Detach from shared memory
    shmctl(shmid, IPC_RMID, NULL); // Mark shared memory for deletion

    return 0;
}
//sender
#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h> //for ipc
#include <sys/shm.h> //for shared memory
#include <string.h>

#define SHM_SIZE 1024
int main(){
// create unique key
key_t key;
int shmid;
char *shm_ptr;

key= ftok("shmfile", 65);

// create shared mem segment
shmid = shmget(key, SHM_SIZE, 0666 | IPC_CREAT);
if (shmid == -1)
{
    perror("shmget failed");
    exit(1);
}
// attach to shared mem using pointer

shm_ptr = (char *)shmat(shmid, NULL, 0);
if (shm_ptr == (char *)-1)
{
    perror("shmat failed");
    exit(1);
}
// writing data

printf("Enter data to write to shared memory\n");
fgets(shm_ptr, SHM_SIZE, stdin);

// deatch to avail to receiver

shmdt(shm_ptr);

return 0;
}
